{"ast":null,"code":"var _jsxFileName = \"/Users/drewl/Projects/mwpTutor/tutor/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport react, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [message, setMessage] = useState([{\n    id: 0,\n    message: \"\"\n  }]);\n  const [response, setResponse] = useState(\"\");\n  var [count, setCount] = useState(1);\n  var [user, setUser] = useState([]);\n  var [holder, setHolder] = useState(\"\");\n  var [grabber, setGrabber] = useState(\"\");\n  var [test, setTest] = useState(\"\");\n  var [answers, setAnswers] = useState([]);\n  /*\n  const [question, setQuestion] = useState(\"\");\n  const [reply, setReply] = useState(\"\");\n  const [resList, setResList] = useState([]);\n  const [counter, setCounter] = useState(0);\n  */\n\n  /*\n  const addQuestion = () => {\n    console.log(question)\n    axios.post('http://localhost:5001/create', {question: question})\n    .then( () => { \n        console.log(\"success\");\n    });\n  }\n  */\n\n  function toTitleCase(str) {\n    return str.toLowerCase().split(' ').map(function (word) {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(' ');\n  }\n\n  const getReply = () => {\n    axios.get('http://localhost:8000/response') //normal port is http://137.184.50.129:50101/response\n    //axios.get('http://localhost:8000/response')\n    .then(response => {\n      console.log(\"success\");\n      console.log(response.data[0][\"original_text\"]);\n      let data = toTitleCase(response.data[0][\"original_text\"]);\n      let ans = response.data[0][\"ans\"];\n      console.log(ans);\n      let temp = answers.concat(ans);\n      setAnswers(temp);\n      console.log(answers);\n      console.log(data);\n      dbPush(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const dbPush = data => {\n    let obj = {\n      \"holder\": data\n    };\n    var newList = user.concat(obj);\n    setCount(count + 1);\n    setUser(newList);\n    console.log(\"db\");\n    console.log(newList);\n    console.log(user);\n  };\n\n  const addElement = e => {\n    setHolder(e.target.value);\n  };\n\n  const pushElement = () => {\n    const hold = {\n      holder\n    };\n    var newList = user.concat(hold);\n    /*\n    var newList = []\n    if (count % 2 === 0){\n      newList = user.concat([hold,\"left\"])\n    }\n    else{\n      newList = user.concat([hold,\"right\"])\n    }\n    */\n\n    setCount(count + 1);\n    setUser(newList);\n    console.log(newList);\n  };\n\n  const showList = () => {\n    user.map(e => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: e\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  const grab = e => {\n    setGrabber(e);\n    console.log(\"grabberSet\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: [/*#__PURE__*/_jsxDEV(\"container\", {\n      class: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Math Word Problem Tutor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"container\", {\n      class: \"second\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sample MWP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => {\n              setHolder(e.target.value);\n              setTest(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button1\",\n          type: \"Submit\",\n          onClick: pushElement,\n          children: \"Sumbit Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"res\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: user.map(e => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temps\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"messageBox\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: e.holder\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 75\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getReply,\n          children: \"Get Response\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 3\n  }, this); //Maybe try using a for loop in the return instead of map\n  //return <h1>{e.holder}</h1>})}\n\n  /*{user.map((e) => {\n    if (e === \"right\"){\n      console.log(\"mapright\")\n      console.log(e)\n      return <div className=\"right\"><h1>{e.holder}</h1></div>\n    }\n    else{\n      console.log(\"mapleft\")\n      console.log(e)\n      return <div className=\"left\"><h1>{e.holder}</h1></div>\n    }\n    })}\n    */\n}\n\n_s(App, \"qWaZxg0Y3GgLQSXhRAtdT83Ri2w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","react","useState","App","message","setMessage","id","response","setResponse","count","setCount","user","setUser","holder","setHolder","grabber","setGrabber","test","setTest","answers","setAnswers","toTitleCase","str","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","getReply","get","then","console","log","data","ans","temp","concat","dbPush","catch","err","obj","newList","addElement","e","target","value","pushElement","hold","showList","grab"],"sources":["/Users/drewl/Projects/mwpTutor/tutor/src/App.js"],"sourcesContent":["\nimport axios from 'axios';\nimport react, { useState } from 'react';\n\nimport './App.css';\n\n\n\n\nfunction App() {\n  const [message, setMessage] = useState([{id: 0, message: \"\"}]);\n  const [response, setResponse] = useState(\"\");\n  var [count, setCount] = useState(1);\n  var [user, setUser] = useState([]);\n  var [holder,setHolder] = useState(\"\");\n  var [grabber,setGrabber] = useState(\"\");\n  var [test, setTest] = useState(\"\");\n  var [answers, setAnswers] = useState([]);\n\n\n      \n  /*\n  const [question, setQuestion] = useState(\"\");\n  const [reply, setReply] = useState(\"\");\n  const [resList, setResList] = useState([]);\n  const [counter, setCounter] = useState(0);\n  */\n  /*\n  const addQuestion = () => {\n    console.log(question)\n    axios.post('http://localhost:5001/create', {question: question})\n    .then( () => { \n        console.log(\"success\");\n    });\n  }\n  */\n \n  function toTitleCase(str) {\n    return str.toLowerCase().split(' ').map(function (word) {\n      return (word.charAt(0).toUpperCase() + word.slice(1));\n    }).join(' ');\n  }  \n\n\n  const getReply = () => {\n    axios.get('http://localhost:8000/response') //normal port is http://137.184.50.129:50101/response\n    //axios.get('http://localhost:8000/response')\n    .then( (response) => {\n      console.log(\"success\")\n      console.log(response.data[0][\"original_text\"])\n      let data = toTitleCase(response.data[0][\"original_text\"])\n      let ans = response.data[0][\"ans\"]\n      console.log(ans)\n      let temp = answers.concat(ans)\n      setAnswers(temp)\n      console.log(answers)\n      console.log(data)\n      dbPush(data)\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n\n  const dbPush = (data) => {\n    let obj = {\"holder\": data}\n    var newList = user.concat(obj)\n    setCount(count + 1)\n    setUser(newList)\n    console.log(\"db\")\n    console.log(newList)\n    console.log(user)\n\n  }\n  \n  const addElement = (e) => {\n    setHolder(e.target.value)\n  }\n\n  const pushElement = () => {\n    const hold = {holder}\n    var newList = user.concat(hold)\n    /*\n    var newList = []\n    if (count % 2 === 0){\n      newList = user.concat([hold,\"left\"])\n    }\n    else{\n      newList = user.concat([hold,\"right\"])\n    }\n    */\n   \n    setCount(count + 1)\n    setUser(newList)\n    console.log(newList)\n  }\n\n  const showList = () => {\n    user.map((e) => {\n      return <h1>{e}</h1>})\n    \n    \n  }\n\n  const grab = (e) => {\n    setGrabber(e)\n    console.log(\"grabberSet\")\n  }\n    \n\n  \n  \n  \n\n  return(\n  \n  <div className=\"background\">\n      <container class=\"title\">\n        <div className=\"titleDiv\">\n          <h1>Math Word Problem Tutor</h1>\n        </div>\n      </container>\n      <container class=\"second\">\n          <div className=\"input1\">\n              <h1>Sample MWP</h1>\n              <form>\n                  <input type=\"text\" onChange={(e) => {\n                    setHolder(e.target.value)\n                    setTest(e.target.value)\n                  \n\n                    }}></input>\n              </form>\n              <button className=\"button1\" type=\"Submit\" onClick={pushElement}>Sumbit Question</button>\n              \n          </div>\n          <div className=\"res\">\n            <div className=\"messages\">\n              {user.map((e) => {\n                return <div className=\"temps\"><div className=\"messageBox\"><p>{e.holder}</p></div></div>\n              })}\n            </div>\n          </div>\n          <div className=\"resButton\">\n              <button onClick={getReply}>\n                Get Response\n              </button>\n              \n          </div>\n      </container>\n  </div>\n  )\n//Maybe try using a for loop in the return instead of map\n//return <h1>{e.holder}</h1>})}\n/*{user.map((e) => {\n  if (e === \"right\"){\n    console.log(\"mapright\")\n    console.log(e)\n    return <div className=\"right\"><h1>{e.holder}</h1></div>\n  }\n  else{\n    console.log(\"mapleft\")\n    console.log(e)\n    return <div className=\"left\"><h1>{e.holder}</h1></div>\n  }\n  })}\n  */\n \n \n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}